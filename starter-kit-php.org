#+TITLE: Starter Kit Python
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:starter-kit.org][Emacs Starter Kit]].

* Starter kit Python

Support for the Python programming language.

** Check Dependencies

Determine whether required packages are installed. If not, use ELPA to
install them.
#+begin_src emacs-lisp
(setq package-archives
'(("melpa" . "https://melpa.org/packages/")) )
  (dolist (package '(php-mode))
    (unless (package-installed-p package)
      (package-install package)))

;;(package-initialize)
;;(unless (package-installed-p 'ac-php )
;; (package-refresh-contents)
;; (package-install 'ac-php )
;; )
;;(require 'cl)
;;(require 'php-mode)
;;(add-hook 'php-mode-hook '(lambda ()
;;                           (auto-complete-mode t)
;;                           (require 'ac-php)
;;                           (setq ac-sources  '(ac-source-php ) )
;;                           (yas-global-mode 1)
;;
;;                           (define-key php-mode-map  (kbd "C-]") 'ac-php-find-symbol-at-point)   ;goto define
;;                           (define-key php-mode-map  (kbd "C-t") 'ac-php-location-stack-back   ) ;go back
;;                           ))
;;
#+end_src

** Use Python's python-mode.el instead of Emacs' python.el
   :PROPERTIES:
   :CUSTOM_ID: python
   :END:
Replace the Python mode that comes with Emacs by the Python mode
supplied by the Python distribution itself.
#+begin_src emacs-lisp
(require 'php-mode)
(add-to-list 'auto-mode-alist '("\\.php$" . php-mode))
(add-to-list 'auto-mode-alist '("\\.inc$" . php-mode))
#+end_src

** Use Cython mode
   :PROPERTIES:
   :CUSTOM_ID: cython
   :END:
#+begin_src emacs-lisp
(require 'flymake-php)
(add-hook 'php-mode-hook 'flymake-php-load)

(add-hook 'php-mode-hook (lambda () (setq comment-start "//"
                                        comment-end   "")))


(defun comment-or-uncomment-region-or-line ()
    "Comments or uncomments the region or the current line if there's no active region."
    (interactive)
    (let (beg end)
        (if (region-active-p)
            (setq beg (region-beginning) end (region-end))
            (setq beg (line-beginning-position) end (line-end-position)))
        (comment-or-uncomment-region beg end)
        (next-line)))

(define-key php-mode-map (kbd "M-;") 'comment-or-uncomment-region-or-line)




(defun wicked/php-mode-init ()
 "Set some buffer-local variables."
 (c-set-style "K&R")
 (setq c-basic-offset 4)
 ;;(c-toggle-auto-hungry-state 1)
 (which-function-mode t)
 (define-key c-mode-base-map [(return)] 'newline-and-indent)
 (local-set-key (kbd "RET") 'newline-and-indent)
 (setq c-macro-shrink-window-flag t)
 (setq c-macro-preprocessor "cpp")
 (setq c-macro-cppflags " ")
 (setq c-macro-prompt-flag t)
 (setq abbrev-mode t))
(add-hook 'php-mode-hook 'wicked/php-mode-init)

#+end_src

   
